{"files": [{"name": "bukkit/BanList.java", "is_deleted": false, "new_rows": [], "removed_rows": [" /**", "         * Banned player UUID", " */", " UUID,"]}, {"name": "defaults/BanCommand.java", "is_deleted": false, "new_rows": [" Bukkit.getBanList(BanList.Type.NAME).addBan(args[0], reason, null, sender.getName());", " Player player = Bukkit.getPlayer(args[0]);"], "removed_rows": [" Player player = Bukkit.getPlayer(args[0]);", " String uuid;", " if (player != null) {", "            uuid = player.getUniqueId().toString();", "        } else {", "            uuid = sender.getServer().getOfflinePlayer(args[0]).getUniqueId().toString();", "        }", "", " Bukkit.getBanList(BanList.Type.UUID).addBan(uuid, reason, null, sender.getName());"]}, {"name": "defaults/BanListCommand.java", "is_deleted": false, "new_rows": [" BanList.Type banType = BanList.Type.NAME;"], "removed_rows": [" BanList.Type banType = BanList.Type.UUID;", " String output = banlist[x].getTarget();", " if (banType == BanList.Type.UUID) {", " try {", " OfflinePlayer player = sender.getServer().getOfflinePlayer(UUID.fromString(output));", " if (player.getName() != null) {", "                        output = player.getName();", "                    }", "                } catch (IllegalArgumentException ex) {", " // We seem to have an invalid UUID, what do?", "                }", "            }", ""]}, {"name": "defaults/PardonCommand.java", "is_deleted": false, "new_rows": [" Bukkit.getBanList(BanList.Type.NAME).pardon(args[0]);"], "removed_rows": [" String uuid = sender.getServer().getOfflinePlayer(args[0]).getUniqueId().toString();", " Bukkit.getBanList(BanList.Type.UUID).pardon(uuid);"]}]}